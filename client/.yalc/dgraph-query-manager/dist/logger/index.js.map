{"version":3,"sources":["../packages/dgraph-query-manager/src/logger/index.ts"],"names":[],"mappings":";;AAAA,qCAA2D;AAE9C,QAAA,MAAM,GAAQ,sBAAY,CAAC;IACpC,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,gBAAM,CAAC,OAAO,CAClB,gBAAM,CAAC,SAAS,CAAC;QACb,MAAM,EAAE,qBAAqB;KAChC,CAAC;IACF,kCAAkC;IAClC,gBAAM,CAAC,KAAK,EAAE,EACd,gBAAM,CAAC,IAAI,EAAE,CAChB;IACD,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/B,gBAAgB;IAChB,+EAA+E;IAC/E,iEAAiE;IACjE,KAAK;IACL,WAAW,EAAE,KAAK;CACrB,CAAC,CAAC;AAEH,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACvC,cAAM,CAAC,GAAG,CAAC,IAAI,oBAAU,CAAC,OAAO,CAAC;QAC9B,MAAM,EAAE,gBAAM,CAAC,OAAO,CAClB,gBAAM,CAAC,QAAQ,EAAE,EACjB,gBAAM,CAAC,MAAM,EAAE,CAClB;KACJ,CAAC,CAAC,CAAC;CACP;AAED,kBAAe,cAAM,CAAC","file":"index.js","sourcesContent":["import { createLogger, format, transports } from 'winston';\r\n\r\nexport const logger: any = createLogger({\r\n    level: 'info',\r\n    format: format.combine(\r\n        format.timestamp({\r\n            format: 'YYYY-MM-DD HH:mm:ss'\r\n        }),\r\n        // format.errors({ stack: true }),\r\n        format.splat(),\r\n        format.json()\r\n    ),\r\n    defaultMeta: { service: 'api' },\r\n    // transports: [\r\n    //     new transports.File({ filename: 'logs/api-error.log', level: 'error' }),\r\n    //     new transports.File({ filename: 'logs/api-combined.log' })\r\n    // ],\r\n    exitOnError: false,\r\n});\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n    logger.add(new transports.Console({\r\n        format: format.combine(\r\n            format.colorize(),\r\n            format.simple()\r\n        )\r\n    }));\r\n}\r\n\r\nexport default logger;"]}