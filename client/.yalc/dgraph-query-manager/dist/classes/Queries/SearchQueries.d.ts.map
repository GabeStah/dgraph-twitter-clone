{"version":3,"sources":["../packages/dgraph-query-manager/src/classes/Queries/SearchQueries.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAGjC,eAAO,MAAM,aAAa;IACxB;;OAEG;;IAoBH;;OAEG;;IAgBH;;OAEG;;IAiBH;;OAEG;;CAoBJ,CAAC","file":"SearchQueries.d.ts","sourcesContent":["import { ParamType } from '../ParamType';\r\nimport { Query } from '../Query';\r\nimport { TypeOf } from '../TypeOf';\r\n\r\nexport const SearchQueries = {\r\n  /**\r\n   * Primary search for text within 'tweet.text' and 'hashtag.hashtag' predicates.\r\n   */\r\n  search: new Query(\r\n    `query find($query: string) {\r\n        a as var(func: anyoftext(tweet.text, $query)) \r\n        var(func: anyoftext(hashtag.hashtag, $query)) {\r\n          b as hashtags: ~tweet.hashtag\r\n        }\r\n        \r\n        data(func: has(tweet.text)) @filter(uid(a) OR uid(b)) {\r\n          uid\r\n          expand(_all_) {\r\n            uid\r\n            expand(_all_)\r\n          }\r\n        }\r\n     }`,\r\n    '/search/:query',\r\n    [new ParamType('$query', TypeOf(String))]\r\n  ),\r\n\r\n  /**\r\n   * Get all Hashtags containing text.\r\n   */\r\n  searchHashtags: new Query(\r\n    `query find($query: string) {\r\n        data(func: anyoftext(hashtag.hashtag, $query))\r\n        {\r\n            uid\r\n            expand(_all_) {\r\n                uid\r\n                expand(_all_) \r\n            }\r\n        }\r\n     }`,\r\n    '/search/hashtag/:query',\r\n    [new ParamType('$query', TypeOf(String))]\r\n  ),\r\n\r\n  /**\r\n   * Get all Tweets containing text.\r\n   */\r\n  searchTweetText: new Query(\r\n    `query find($query: string) {\r\n        data(func: anyoftext(tweet.text, $query))\r\n        {\r\n            uid\r\n            expand(_all_) \r\n            {\r\n              uid\r\n              expand(_all_)\r\n            }\r\n        }\r\n     }`,\r\n    '/search/tweet/:query',\r\n    [new ParamType('$query', TypeOf(String))]\r\n  ),\r\n\r\n  /**\r\n   * Dynamic search based on passed function, predicate, and query.\r\n   */\r\n  searchBy: new Query(\r\n    `query find($query: string) {\r\n        data(func: $function($predicate, $query))\r\n        {\r\n            uid\r\n            expand(_all_) \r\n            {\r\n              uid\r\n              expand(_all_)\r\n            }\r\n        }\r\n     }`,\r\n    '/search/by/:function/:predicate/:query',\r\n    [\r\n      new ParamType('$function', TypeOf(String), true),\r\n      new ParamType('$predicate', TypeOf(String), true),\r\n      new ParamType('$query', TypeOf(String))\r\n    ]\r\n  )\r\n};\r\n"]}