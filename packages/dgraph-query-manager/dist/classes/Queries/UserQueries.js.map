{"version":3,"sources":["../packages/dgraph-query-manager/src/classes/Queries/UserQueries.ts"],"names":[],"mappings":";;AAAA,4CAAyC;AACzC,oCAAiC;AACjC,sCAAmC;AAEtB,QAAA,WAAW,GAAG;IACzB,IAAI,EAAE,IAAI,aAAK,CACb;;;;;;;;;OASG,EACH,WAAW,EACX,CAAC,IAAI,qBAAS,CAAC,KAAK,EAAE,eAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CACvC;IAED,aAAa,EAAE,IAAI,aAAK,CACtB;;;;;;OAMG,EACH,yBAAyB,EACzB,CAAC,IAAI,qBAAS,CAAC,QAAQ,EAAE,eAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAC1C;IAED,kBAAkB,EAAE,IAAI,aAAK,CAC3B;;;;;;OAMG,EACH,mCAAmC,EACnC,CAAC,IAAI,qBAAS,CAAC,aAAa,EAAE,eAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAC/C;IAED,MAAM,EAAE,IAAI,aAAK,CACf;;;;;OAKG,EACH,QAAQ,CACT;IAED,kBAAkB,EAAE,IAAI,aAAK,CAC3B;;;;;;;;OAQG,EACH,QAAQ,CACT;CACF,CAAC","file":"UserQueries.js","sourcesContent":["import { ParamType } from '../ParamType';\r\nimport { Query } from '../Query';\r\nimport { TypeOf } from '../TypeOf';\r\n\r\nexport const UserQueries = {\r\n  find: new Query(\r\n    `query find($id: string) {\r\n        data(func: uid($id))\r\n        {\r\n            uid\r\n            expand(_all_) {\r\n                uid\r\n                expand(_all_) \r\n            }\r\n        }\r\n     }`,\r\n    '/user/:id',\r\n    [new ParamType('$id', TypeOf(String))]\r\n  ),\r\n\r\n  findFromEmail: new Query(\r\n    `query find($email: string) {\r\n        data(func: eq(user.email, $email))\r\n        {\r\n            uid\r\n            expand(_all_)\r\n        }\r\n     }`,\r\n    '/user/from/email/:email',\r\n    [new ParamType('$email', TypeOf(String))]\r\n  ),\r\n\r\n  findFromScreenName: new Query(\r\n    `query find($screenName: string) {\r\n        data(func: eq(user.screenName, $screenName))\r\n        {\r\n            uid\r\n            expand(_all_)\r\n        }\r\n     }`,\r\n    '/user/from/screenName/:screenName',\r\n    [new ParamType('$screenName', TypeOf(String))]\r\n  ),\r\n\r\n  getAll: new Query(\r\n    `query {\r\n        data(func: has (user.email)) {\r\n            uid\r\n            expand(_all_)\r\n        }\r\n     }`,\r\n    '/users'\r\n  ),\r\n\r\n  getAllWithChildren: new Query(\r\n    `query {\r\n        data(func: has (user.email)) {\r\n            uid\r\n            expand(_all_) {\r\n                uid\r\n                expand(_all_)\r\n            }\r\n        }\r\n     }`,\r\n    '/users'\r\n  )\r\n};\r\n"]}