{"version":3,"sources":["../packages/dgraph-query-manager/src/classes/Queries/UserQueries.ts"],"names":[],"mappings":";;AAAA,4CAAyC;AACzC,oCAAiC;AACjC,sCAAmC;AAEtB,QAAA,WAAW,GAAG;IACvB,IAAI,EAAE,IAAI,aAAK,CAAC;;;;;;;;;OASb,EACC,WAAW,EACX;QACA,IAAI,qBAAS,CAAC,KAAK,EAAE,eAAM,CAAC,MAAM,CAAC,CAAC;KACvC,CAAC;IAEF,aAAa,EAAE,IAAI,aAAK,CAAC;;;;;;OAMtB,EACC,yBAAyB,EACzB;QACI,IAAI,qBAAS,CAAC,QAAQ,EAAE,eAAM,CAAC,MAAM,CAAC,CAAC;KAC1C,CAAC;IAEN,MAAM,EAAE,IAAI,aAAK,CAAC;;;;;OAKf,EACC,QAAQ,CAAC;IAEb,kBAAkB,EAAE,IAAI,aAAK,CAAC;;;;;;;;OAQ3B,EACC,QAAQ,CAAC;CAChB,CAAC","file":"UserQueries.js","sourcesContent":["import { ParamType } from '../ParamType';\r\nimport { Query } from '../Query';\r\nimport { TypeOf } from '../TypeOf';\r\n\r\nexport const UserQueries = {\r\n    find: new Query(`query find($id: string) {\r\n        data(func: uid($id))\r\n        {\r\n            uid\r\n            expand(_all_) {\r\n                uid\r\n                expand(_all_) \r\n            }\r\n        }\r\n     }`,\r\n        '/user/:id',\r\n        [\r\n        new ParamType('$id', TypeOf(String))\r\n    ]),\r\n\r\n    findFromEmail: new Query(`query find($email: string) {\r\n        data(func: eq(user.email, $email))\r\n        {\r\n            uid\r\n            expand(_all_)\r\n        }\r\n     }`,\r\n        '/user/from/email/:email',\r\n        [\r\n            new ParamType('$email', TypeOf(String))\r\n        ]),\r\n\r\n    getAll: new Query(`query {\r\n        data(func: has (user.email)) {\r\n            uid\r\n            expand(_all_)\r\n        }\r\n     }`,\r\n        '/users'),\r\n\r\n    getAllWithChildren: new Query(`query {\r\n        data(func: has (user.email)) {\r\n            uid\r\n            expand(_all_) {\r\n                uid\r\n                expand(_all_)\r\n            }\r\n        }\r\n     }`,\r\n        '/users'),\r\n};"]}