{"version":3,"sources":["../packages/dgraph-query-manager/src/classes/Queries/TweetQueries.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAGjC,eAAO,MAAM,YAAY;IACvB;;OAEG;;IAeH;;OAEG;;IAcH;;OAEG;;IAeH;;OAEG;;IAkBH;;OAEG;;CAiBJ,CAAC","file":"TweetQueries.d.ts","sourcesContent":["import { ParamType } from '../ParamType';\r\nimport { Query } from '../Query';\r\nimport { TypeOf } from '../TypeOf';\r\n\r\nexport const TweetQueries = {\r\n  /**\r\n   * Find a Tweet by Uid.\r\n   */\r\n  find: new Query(\r\n    `query find($id: string) {\r\n      data(func: uid($id)) {\r\n        uid\r\n        expand(_all_) {\r\n          uid\r\n          expand(_all_) \r\n        }\r\n      }\r\n     }`,\r\n    '/tweet/:id',\r\n    [new ParamType('$id', TypeOf(String))]\r\n  ),\r\n\r\n  /**\r\n   * Get all Tweets.\r\n   */\r\n  getAll: new Query(\r\n    `query {\r\n      data(func: has (tweet.text)) {\r\n        uid\r\n        expand(_all_) {\r\n          uid\r\n          expand(_all_)\r\n        }\r\n      }\r\n     }`,\r\n    '/tweets'\r\n  ),\r\n\r\n  /**\r\n   * Get first N Tweets.\r\n   */\r\n  getAllPaginated: new Query(\r\n    `query find($count: int = 10) {\r\n      data(func: has (tweet.text), first: $count) {\r\n        uid\r\n        expand(_all_) {\r\n          uid\r\n          expand(_all_)\r\n        }\r\n      }\r\n     }`,\r\n    '/tweets/:count',\r\n    [new ParamType('$count', TypeOf(String))]\r\n  ),\r\n\r\n  /**\r\n   * Get all Tweets created by User.\r\n   */\r\n  getAllForUser: new Query(\r\n    `query find($id: string) {\r\n      data(func: uid($id)) {\r\n        tweets: ~tweet.user (orderdesc: tweet.createdAt) {\r\n          uid\r\n          expand(_all_) {\r\n            uid\r\n            expand(_all_)\r\n          }\r\n        }\r\n      }\r\n     }`,\r\n    '/tweets/user/:id',\r\n    [new ParamType('$id', TypeOf(String))],\r\n    'data.tweets'\r\n  ),\r\n\r\n  /**\r\n   * Get all Tweets that reply to specified Tweet Uid.\r\n   */\r\n  getReplies: new Query(\r\n    `query find($id: string) {\r\n      data(func: has(tweet.text)) {\r\n        tweets: @filter(uid_in(tweet.inReplyToStatusId, $id)) {\r\n          uid\r\n          expand(_all_) {\r\n            uid\r\n            expand(_all_)\r\n          }\r\n        }\r\n      }\r\n    }`,\r\n    `/tweet/:id/replies`,\r\n    [new ParamType('$id', TypeOf(String))],\r\n    'data.tweets'\r\n  )\r\n};\r\n"]}