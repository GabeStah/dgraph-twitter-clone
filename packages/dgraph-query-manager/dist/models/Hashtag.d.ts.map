{"version":3,"sources":["../packages/dgraph-query-manager/src/models/Hashtag.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAc,MAAM,WAAW,CAAC;AAEtE,MAAM,WAAW,gBAAiB,SAAQ,kBAAkB;IAC1D,iBAAiB,EAAE,MAAM,CAAC;IAC1B,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC;CAC7B;AAED,qBAAa,OAAQ,SAAQ,SAAS,CAAC,OAAO,CAAE,YAAW,gBAAgB;IACzE;;;OAGG;IACH,iBAAiB,EAAE,MAAM,CAAC;IAE1B;;;;;OAKG;IACH,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC;gBAEhB,MAAM,GAAE,OAAO,CAAC,OAAO,CAAM;IAMzC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,MAAM;IAO/D;;;;OAIG;WACU,IAAI,CAAC,MAAM,GAAE,OAAO,CAAC,OAAO,CAAM,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;CAc5E","file":"Hashtag.d.ts","sourcesContent":["import { BaseModel, BaseModelInterface, Tweet, Uid } from '../models';\r\n\r\nexport interface HashtagInterface extends BaseModelInterface {\r\n  'hashtag.hashtag': string;\r\n  'hashtag.indices': [number];\r\n}\r\n\r\nexport class Hashtag extends BaseModel<Hashtag> implements HashtagInterface {\r\n  /**\r\n   * Name of the hashtag, minus the leading ‘#’ character.\r\n   * @type {string}\r\n   */\r\n  'hashtag.hashtag': string;\r\n\r\n  /**\r\n   * An array of integers indicating the offsets within the Tweet text where the hashtag begins and ends.\r\n   * The first integer represents the location of the # character in the Tweet text string.\r\n   * The second integer represents the location of the first character after the hashtag.\r\n   * @type {[number]}\r\n   */\r\n  'hashtag.indices': [number];\r\n\r\n  constructor(params: Partial<Hashtag> = {}) {\r\n    super(params);\r\n    // Override defaults\r\n    Object.assign(this, Hashtag.deserialize(params));\r\n  }\r\n\r\n  static createObject(hashtag: string, indices: number[]): object {\r\n    return {\r\n      'hashtag.hashtag': hashtag,\r\n      'hashtag.indices': indices\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Performs all steps of async Hashtag creation.\r\n   * @param {Partial<Hashtag>} params\r\n   * @returns {Promise<Hashtag<Tweet>>}\r\n   */\r\n  static async load(params: Partial<Hashtag> = {}): Promise<Partial<Hashtag>> {\r\n    // Combine paramTypes with default properties.\r\n    params = this.injectDefaults(params);\r\n    // Serialize (e.g. convert fields to payload-compatible object)\r\n    params = await this.serialize(params);\r\n    // Perform mutation\r\n    const serialization = await this.insert(params);\r\n    if (!params.uid) {\r\n      params.uid = new Uid(serialization);\r\n    }\r\n    // Deserialize (e.g. convert payload back to object)\r\n    params = this.deserialize(params);\r\n    return params;\r\n  }\r\n}\r\n"]}