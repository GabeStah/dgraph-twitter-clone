{"version":3,"sources":["../packages/dgraph-query-manager/src/models/Hashtag.ts"],"names":[],"mappings":";;AAAA,sCAAsE;AAQtE,MAAa,OAAQ,SAAQ,kBAAkB;IAqB7C,YAAY,SAA2B,EAAE;QACvC,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,oBAAoB;QACpB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,OAAe,EAAE,OAAiB;QACpD,OAAO;YACL,iBAAiB,EAAE,OAAO;YAC1B,iBAAiB,EAAE,OAAO;SAC3B,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAA2B,EAAE;QAC7C,8CAA8C;QAC9C,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrC,+DAA+D;QAC/D,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtC,mBAAmB;QACnB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,MAAM,CAAC,GAAG,GAAG,IAAI,YAAG,CAAC,aAAa,CAAC,CAAC;SACrC;QACD,oDAAoD;QACpD,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AArDD,0BAqDC","file":"Hashtag.js","sourcesContent":["import { BaseModel, BaseModelInterface, Tweet, Uid } from '../models';\r\n\r\nexport interface HashtagInterface extends BaseModelInterface {\r\n  'hashtag.hashtag': string;\r\n  'hashtag.indices': [number];\r\n  'hashtag.tweet': Tweet;\r\n}\r\n\r\nexport class Hashtag extends BaseModel<Hashtag> implements HashtagInterface {\r\n  /**\r\n   * Name of the hashtag, minus the leading ‘#’ character.\r\n   * @type {string}\r\n   */\r\n  'hashtag.hashtag': string;\r\n\r\n  /**\r\n   * An array of integers indicating the offsets within the Tweet text where the hashtag begins and ends.\r\n   * The first integer represents the location of the # character in the Tweet text string.\r\n   * The second integer represents the location of the first character after the hashtag.\r\n   * @type {[number]}\r\n   */\r\n  'hashtag.indices': [number];\r\n\r\n  /**\r\n   * The associated tweet containing this hashtag.\r\n   * @type {!Tweet}\r\n   */\r\n  'hashtag.tweet': Tweet;\r\n\r\n  constructor(params: Partial<Hashtag> = {}) {\r\n    super(params);\r\n    // Override defaults\r\n    Object.assign(this, Hashtag.deserialize(params));\r\n  }\r\n\r\n  static createObject(hashtag: string, indices: number[]): object {\r\n    return {\r\n      'hashtag.hashtag': hashtag,\r\n      'hashtag.indices': indices\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Performs all steps of async Hashtag creation.\r\n   * @param {Partial<Hashtag>} params\r\n   * @returns {Promise<Hashtag<Tweet>>}\r\n   */\r\n  static async load(params: Partial<Hashtag> = {}): Promise<Partial<Hashtag>> {\r\n    // Combine paramTypes with default properties.\r\n    params = this.injectDefaults(params);\r\n    // Serialize (e.g. convert fields to payload-compatible object)\r\n    params = await this.serialize(params);\r\n    // Perform mutation\r\n    const serialization = await this.insert(params);\r\n    if (!params.uid) {\r\n      params.uid = new Uid(serialization);\r\n    }\r\n    // Deserialize (e.g. convert payload back to object)\r\n    params = this.deserialize(params);\r\n    return params;\r\n  }\r\n}\r\n"]}